name: Deploy to WSL2 Docker

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build jar
        run: ./gradlew bootJar

      # jar 파일 전송
      - name: Copy files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.WSL2_SSH_HOST }}
          port: ${{ secrets.WSL2_SSH_PORT }}
          username: ${{ secrets.WSL2_SSH_USER }}
          key: ${{ secrets.WSL2_SSH_PRIVATE_KEY }}
          source: |
            ./build/libs/dataHub-0.0.1.jar
          target: /home/uk/app

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.WSL2_SSH_PRIVATE_KEY }}

      # 도커 배포
      # 다른 컨테이너에 db 배포 되어 있어 특정 네트워크로 묶기어서 실행 + env 환경변수
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.WSL2_SSH_HOST }}
          port: ${{ secrets.WSL2_SSH_PORT }}
          username: ${{ secrets.WSL2_SSH_USER }}
          key: ${{ secrets.WSL2_SSH_PRIVATE_KEY }}
          script: |
            cd /home/uk/app/build/libs
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker build -t datahub-image:latest .
            docker stop datahub-container || true
            docker rm datahub-container || true
            docker run -d --name datahub-container -p 8082:8082 --network db-network --env-file .env datahub-image:latest
          
